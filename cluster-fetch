#!/usr/bin/perl

#####################################################################
#
# cluster-fetch
#   - fetches stuff from multiple servers using curl
#
# @author sergio salvatore (sergio@cucinalogica.com)
# @version 2.0
#
#
#####################################################################

use strict;
use Getopt::Long;

use constant CURL => 'curl';

my($username, $password, $path, $serverFile, $userAgent, $fetchPrefix);
GetOptions(
	'user|u=s' => \$username,
	'password|p=s' => \$password,
	'useragent|ua=s' => \$userAgent,
	'fetch|f=s' => \$fetchPrefix
);

my($path) = shift(@ARGV);
my($serverFile) = shift(@ARGV);

if (substr($path, 0, 1) ne '/') {
	die("path ($path) should start with a '/'\n" . usage());
}

if (! -r $serverFile) {
	die("serverFile ($serverFile) is not readable\n" . usage());
}

open(SF, "<$serverFile") or die("couldn't open $serverFile for reading: $!");

my(@servers, $server, $line);
while ($line = <SF>) {
	next if $line =~ /^#/;
	chomp($line);
	push(@servers, $line);
}

my(%options);
if ($username && $password) {
	$options{'u'} = "'$username:$password'";
}

if ($userAgent) {
	$options{'A'} = "'$userAgent'";
}


foreach $server (@servers) {

	if ($fetchPrefix) {
		$options{'o'} = "'$fetchPrefix-$server'";
	}

	my($optString) = optionString(%options);

	my($command) = CURL . " $optString -s 'http://$server${path}'";
	
	if (!$fetchPrefix) {
		$command .= " > /dev/null";
	}
	
	#print "command: $command\n";
	if (system($command) == 0) {
		print "$server OK\n";
	} else {
		print "$server FAIL\n";
	}
}
 

sub optionString {
	my(%hashRef) = @_;

	my(@opts, $k, $v);
	while (($k, $v) = each(%hashRef)) {
		push(@opts, "-$k $v");
	}
	
	return join(' ', @opts);
}

sub usage {
	return <<END
cluster-fetch USAGE:
	\$> cluster-fetch [options] <path-with-leading-slash> <server-list>
	
	options are:
		-username|u: username
		-password|p: password
		-useragent|ua: user agent
		-fetch|f: fetch prefix -- what to prepend to the file
END
}
